services:
    nginx:
      image: nginx:alpine
      container_name: nginxwebsvr
      ports:
        - "80:80"
      volumes:
        - ./repos:/usr/share/nginx/html
        - ./nginx.conf:/etc/nginx/nginx.conf
    php:
      build:
        context: ./phpapp
      container_name: php-fpm
      volumes:
        - ./repos:/usr/share/nginx/html
      working_dir: /usr/share/nginx/html
    mysqldb:
      image: mysql:8.0
      restart: always
      volumes:
        - ./mysql_data:/var/lib/mysql
      environment:
        MYSQL_ROOT_PASSWORD: pass
        MYSQL_DATABASE: testdb
        MYSQL_USER: user
        MYSQL_PASSWORD: pass
    git-server:
      build:
        dockerfile: gitserver.Dockerfile
        context: .
      restart: always
      ports:
        - "3000:3000"
      volumes:
        - ./repos:/var/www/git
    sonarqube:
      image: sonarqube:community
      container_name: sonarqube
      ports:
        - "9000:9000"
      environment:
        SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
        SONAR_JDBC_USERNAME: sonar
        SONAR_JDBC_PASSWORD: sonar
      depends_on:
        - sonarqube-db
      volumes:
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
        - sonarqube_logs:/opt/sonarqube/logs
    sonarqube-db:
      image: postgres:15
      container_name: sonarqube_db
      environment:
        POSTGRES_USER: sonar
        POSTGRES_PASSWORD: sonar
        POSTGRES_DB: sonar
      volumes:
        - sonarqube_postgres_data:/var/lib/postgresql/data

volumes:
  mysql_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_postgres_data: